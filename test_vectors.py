# -*- coding: utf-8 -*-
"""
Created on Mon Feb 24 02:01:11 2020

@author: EP
"""

xs = [
    36.19529027427183,
    36.217090389813556,
    36.22089814223539,
    36.22392597739871,
    36.22671577722617,
    36.232408954715424,
    36.23519875644282,
    36.24574606174191,
    36.24788861153156,
    36.25209419696905,
    36.25524569261356,
    36.25820957919854,
    36.26611907308287,
    36.27247811073829,
    36.29294057609874,
    36.29958602750958,
    36.32563879252719,
    36.33202363261709,
    36.399427473352574,
    36.413271850154025,
    36.416395976025555,
    36.41951210767638,
    36.42220868367289,
    36.42603924085898,
    36.43147538802696,
    36.439046543701004,
    36.44486452574091,
    36.45171333669118,
    36.5185404597305,
    36.546989134093,
    36.563290699639616,
    36.577646722038594,
    36.58497757654602,
    36.592392797060356,
    36.600520773995534,
    36.60343090956189,
    36.606209495947816,
    36.609346902140736,
    36.618399100390675,
    36.62412140368907,
    36.629262901604136,
    36.64772750514527,
    36.65058865876502,
    36.653367247179744,
    36.656039043197666,
    36.657859742387366,
    36.6611824979356,
    36.66371722095103,
    36.66685243377162,
    36.66994744416119,
    36.673300372083425,
    36.67676929722389,
    36.68346819309606,
    36.816182554219345,
    37.05650957077476,
    37.343364753829995,
    37.466760987244825,
    37.481547058021164,
    37.496398096802146,
    37.52601753640831,
    37.555661265573065,
    37.85542055895846,
    37.90510500089318,
    37.93828218793392,
    37.97143973959967,
    38.02198114877588,
    38.05529553873143,
    38.088432658133236,
    38.315554060363496,
    38.563303393618895,
    38.579526616923694,
    38.59609021898443,
    38.612933697885076,
    38.92587817204235,
    38.992755343991874,
    39.00885945407968,
    39.024561338288,
    39.040135127706094,
    39.08710202869035,
    39.4042702604947,
    39.584264846695014,
    39.6174132158347,
    39.65079055092302,
    39.95986053975569,
    40.08135867861124,
    40.087418568809774,
    40.09201809495772,
    40.09604282437427,
    40.10022753947584,
    40.104621931955826,
    40.109793666086944,
    40.115229785488516,
    40.19179665815888,
    40.45551760959443,
    40.77601595851284,
    40.96330966293776,
    40.996356781115885,
    41.02782678398354,
    41.06854628793372,
    41.08057265536269,
    41.11226797161009,
    41.12852947966619,
    41.13277643035868,
    41.13497379533198,
    41.137098040436236,
    41.14002273786867,
    41.14401271244709,
    41.14785697738692,
    41.15275757200388,
    41.15902426214854,
    41.165613085055206,
    41.41811128089055,
    41.73173244956305,
    42.03910064226198,
    42.339552596310085,
    42.643695883619216,
    42.94705261101223,
    43.249720717694004,
    43.55149948023632,
    43.85337801029885,
    44.1563131465794,
    44.477818572258585,
    44.7804482793359,
    45.0898761349078,
    45.39803540621995,
    45.70180819848672,
    46.00897293121958,
    46.313668293984364,
    46.638637591319316,
    46.960979145365386,
    47.27701702946462,
    47.597584130612034,
    47.900290002549966,
    48.20248457912172,
    48.525214432838034,
    48.83286667093476,
    49.135040879614095,
    49.458166423496095,
    49.75990645240319,
    50.062145100313266,
    50.38516542992355,
    50.70383957674086,
    51.02422504760682,
    51.344172236487196,
    51.64662970292564,
    51.94800234772502,
    52.263415771527455,
    52.57971405116102,
    52.82098760773237,
    53.130377877635866,
    53.44904090100887,
    53.766158782311656,
    54.08158982677703,
    54.273028793972685,
    54.46228187300374,
    54.6501445611069,
    54.838442979130676,
    55.02882721637323,
    55.218106703816034,
    55.40940670716388,
    55.59959710949949,
    55.82234936009661,
    56.027738731903185,
    56.11250125077078,
    56.19894009806204,
    56.272243184264696,
    56.3190030758211,
    56.389353538058614,
    56.39221926978796,
    56.394661350164874,
    56.3980302605458,
    56.400775409273955,
    56.40349327789114,
    56.407060815921206,
    56.42443062140065,
    56.43243770153883,
    56.437465492743705,
    56.45029136692018,
    56.45029136692018,
    56.45029136692018,
    56.45029136692018,
    56.45029136692018,
    56.45029136692018,
    56.45029136692018,
    56.45132083606568,
    56.45132083606568,
    56.452210396735104,
    56.45279934901933,
    56.454793512117995,
    56.45635788534102,
    56.45792225835556,
    56.459867549610586,
    56.46102570080346,
    56.46128306773523,
    56.46397952809866,
    56.46621827245263,
    56.47378391693036,
    56.482238661365066,
    56.48447740560069,
    56.50272973691682,
    56.504550260155774,
    56.50581624389241,
    56.50671506383724,
    56.50877055771002,
    56.51101244241495,
    56.51361420062152,
    56.5169784971045,
    56.525269342199,
    56.53701356699974,
    56.6361002383626,
    56.640350920693514,
    56.646186743985616,
    56.650948655744564,
    56.65708642865345,
    56.66334650540837,
    56.66962111344948,
    56.90235458580601,
    57.108165615121784,
    57.36884112302732,
    57.66512196057184,
    57.77487137016561,
    57.830952729910194,
    57.83418753452504,
    57.83817562238811,
]

from vectors import qs, percentile_index, growing_index


def test_qs():
    assert qs(4) == [0.25, 0.5, 0.75]
    assert qs(4, True) == [0.0, 0.25, 0.5, 0.75]
    assert qs(4, True, True) == [0.0, 0.25, 0.5, 0.75, 1.0]
    assert qs(4, end=True) == [0.25, 0.5, 0.75, 1.0]


def test_percentile_index():
    ixs = percentile_index(xs, [0.25, 0.5, 0.75])
    assert [round((xs[i] - xs[0]) / (xs[-1] - xs[0]), 2) for i in ixs] == [
        0.26,
        0.51,
        0.76,
    ]

    ixs2 = percentile_index(xs, qs(4))
    assert ixs == ixs2


def test_include_latest():
    import pandas as pd

    assert growing_index(pd.Series([1, 2, 3, 4, 5]), 2) == [0, 2, 4]
